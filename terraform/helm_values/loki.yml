deploymentMode: Distributed

backend:
  replicas: 0

read:
  replicas: 0

write:
  replicas: 0

gateway:
  autoscaling:
    enabled: true
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 180
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"
  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

loki:
  server:
    grpc_server_max_recv_msg_size: 104857600 # 100 Mb
    grpc_server_max_send_msg_size: 104857600 # 100 Mb

  ingester_client:
    grpc_client_config:
    max_recv_msg_size: 104857600 # 100 Mb
    max_send_msg_size: 104857600 # 100 Mb

  limits_config:
    reject_old_samples_max_age: 360h
    retention_period: 720h
    per_stream_rate_limit: "6MB"
    per_stream_rate_limit_burst: "20MB"
    max_query_parallelism: 128
    split_queries_by_interval: 15m
    ingestion_rate_mb: 40
    ingestion_burst_size_mb: 60
    max_label_names_per_series: 50
    max_global_streams_per_user: 10000
    max_entries_limit_per_query: 15000

  querier:
    max_concurrent: 8

  auth_enabled: false

  frontend:
    scheduler_address: '{{ include "loki.querySchedulerAddress" . }}'
    tail_proxy_url: '{{ include "loki.querierAddress" . }}'
  frontend_worker:
    scheduler_address: '{{ include "loki.querySchedulerAddress" . }}'

  schemaConfig:
    configs:
      - from: 2024-04-01
        object_store: s3
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h

  rulerConfig:
    storage:
      type: s3
    ring:
      kvstore:
        store: memberlist
    rule_path: /tmp/loki/scratch
    alertmanager_url: http://monitoring-kube-prometheus-alertmanager:9093

  compactor:
    working_directory: /tmp/loki/compactor
    compaction_interval: 10m
    retention_enabled: true
    retention_delete_delay: 2h
    retention_delete_worker_count: 150
    delete_request_store: s3

  distributor:
    ring:
      kvstore:
        store: memberlist

  ingester:
    chunk_idle_period: 2h
    chunk_target_size: 1536000
    chunk_encoding: snappy
    max_chunk_age: 2h
    lifecycler:
      ring:
        kvstore:
          store: memberlist
        replication_factor: 1

  useTestSchema: false

  storage:
    bucketNames:
      chunks: ${chunks_bucket}
      ruler: ${ruler_bucket}
    type: s3
    s3:
      s3: null
      endpoint: null
      region: ${region}
      s3ForcePathStyle: true
      sse:
        type: "SSE-S3"

test:
  enabled: false

lokiCanary:
  enabled: false

serviceAccount:
  create: true
  name: loki

ingester:
  autoscaling:
    enabled: true
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: ingester
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

  zoneAwareReplication:
    enabled: false

distributor:
  replicas: 1
  autoscaling:
    enabled: true
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: distributor
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"
  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

querier:
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: querier
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

queryFrontend:
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query-frontend
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

queryScheduler:
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query-scheduler
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

indexGateway:
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: index-gateway
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

compactor:
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: compactor
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

  serviceAccount:
    name: loki

ruler:
  enabled: true
  replicas: 1

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: ruler
          topologyKey: kubernetes.io/hostname

    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"

  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

memcachedExporter:
  enabled: false

resultsCache:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"
  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

chunksCache:
  allocatedMemory: 512
  resources:
    requests:
      memory: 615Mi
    limits:
      memory: 615Mi
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/controller
                operator: In
                values:
                  - "true"
  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
